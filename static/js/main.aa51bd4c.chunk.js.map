{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","squaresThatWon","console","log","includes","this","grid","count","row","j","push","renderSquare","React","Component","Game","history","lastMove","stepNumber","sortedAscending","step","setState","slice","length","calculateWinner","concat","parseInt","moves","isAscending","sortMoves","sort","a","b","key","current","winners","isDraw","status","map","move","desc","jumpTo","sortSteps","handleClick","lines","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa51bd4c.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Square(props) {\n    return (\n        <button className={\"square \" + props.className} onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n/*\n//class component\nclass Square extends React.Component {\n    render() {\n        return (\n            <button\n                className=\"square\"\n                onClick={() => {\n                    this.props.onClick();\n                }}\n            >\n                {this.props.value}\n            </button>\n        );\n    }\n}\n*/\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n    renderSquare(i, squaresThatWon) {\n        let className;\n        if (squaresThatWon) {\n            console.log(squaresThatWon);\n            if (squaresThatWon.includes(i)) className = \"select\";\n            else className = \"\";\n        }\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n                className={className}\n                key={i}\n            />\n        );\n    }\n\n    render() {\n        const squaresThatWon = this.props.squaresThatWon;\n        console.log(squaresThatWon);\n\n        const grid = [];\n        let count = 0;\n        for (let i = 0; i < 3; ++i) {\n            const row = [];\n            for (let j = 0; j < 3; ++j) {\n                row.push(this.renderSquare(count, squaresThatWon));\n                count++;\n            }\n            grid.push(\n                <div className=\"board-row\" key={i}>\n                    {row}\n                </div>\n            );\n        }\n\n        return <div>{grid}</div>;\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{ squares: Array(9).fill(null), lastMove: [-1, -1] }],\n            stepNumber: 0,\n            xIsNext: true,\n            sortedAscending: true,\n        };\n    }\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0,\n        });\n    }\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (squares[i] || calculateWinner(squares)) return;\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        //Square components re-render auto and Game has full control\n        // over square components known as controlled com=ponenets.\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares,\n                    lastMove: [(i % 3) + 1, parseInt(i / 3) + 1],\n                },\n            ]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length, //history here is local variable referrin to old unconcatenated history, another advantage of immutability approach\n        });\n    }\n    sortSteps(moves, isAscending) {\n        const sortMoves = moves.slice();\n        if (isAscending) sortMoves.sort((a, b) => a.key - b.key);\n        else sortMoves.sort((a, b) => b.key - a.key);\n\n        return sortMoves;\n    }\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        console.log(calculateWinner(current.squares));\n        const winners = calculateWinner(current.squares);\n        let isDraw = false;\n        if (!current.squares.includes(null) && !winners) isDraw = true;\n\n        let moves = history.map((step, move) => {\n            let desc = move\n                ? `Go to game #${move} col: ${step.lastMove[0]} row: ${step.lastMove[1]}`\n                : \"Go to game start\";\n            const stepNumber = this.state.stepNumber;\n            desc = move === stepNumber ? <b> {desc} </b> : desc;\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}> {desc} </button>\n                </li>\n            );\n        });\n        if (this.state.sortedAscending) {\n            moves = this.sortSteps(moves, true);\n        } else moves = this.sortSteps(moves, false);\n\n        let status;\n        if (isDraw) status = \"DRAW\";\n        else if (winners) status = \"WINNER: \" + winners[0];\n        else status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        squaresThatWon={winners ? winners[1] : null}\n                        onClick={(i) => {\n                            this.handleClick(i);\n                        }}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>\n                        <button\n                            onClick={() => {\n                                this.setState({\n                                    sortedAscending:\n                                        !this.state.sortedAscending,\n                                });\n                            }}\n                        >\n                            {`Sort moves ${\n                                this.state.sortedAscending\n                                    ? \"descending\"\n                                    : \"ascending\"\n                            }`}\n                        </button>\n                    </div>\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n            squares[a] &&\n            squares[a] === squares[b] &&\n            squares[a] === squares[c]\n        ) {\n            return [squares[a], lines[i]];\n        }\n    }\n    return null;\n}\n"],"sourceRoot":""}